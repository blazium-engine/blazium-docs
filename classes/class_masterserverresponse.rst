:github_url: hide

.. DO NOT EDIT THIS FILE!!!
.. Generated automatically from Godot engine sources.
.. Generator: https://github.com/blazium-engine/blazium/tree/4.3/doc/tools/make_rst.py.
.. XML source: https://github.com/blazium-engine/blazium/tree/4.3/modules/blazium_sdk/doc_classes/MasterServerResponse.xml.

.. _class_MasterServerResponse:

MasterServerResponse
====================

**Inherits:** :ref:`RefCounted<class_RefCounted>` **<** :ref:`Object<class_Object>`

Response from a :ref:`MasterServerClient.create_game()<class_MasterServerClient_method_create_game>` or :ref:`MasterServerClient.update_game()<class_MasterServerClient_method_update_game>` call.

.. rst-class:: classref-introduction-group

Description
-----------

Response from a :ref:`MasterServerClient.create_game()<class_MasterServerClient_method_create_game>` or :ref:`MasterServerClient.update_game()<class_MasterServerClient_method_update_game>` call. Await on :ref:`finished<class_MasterServerResponse_signal_finished>` signal to get the :ref:`MasterServerResult<class_MasterServerResult>`.

.. rst-class:: classref-section-separator

----

.. rst-class:: classref-descriptions-group

Signals
-------

.. _class_MasterServerResponse_signal_finished:

.. rst-class:: classref-signal

**finished**\ (\ result\: :ref:`MasterServerResult<class_MasterServerResult>`\ ) :ref:`ðŸ”—<class_MasterServerResponse_signal_finished>`

Signal emitted when the request is finished.

.. |virtual| replace:: :abbr:`virtual (This method should typically be overridden by the user to have any effect.)`
.. |const| replace:: :abbr:`const (This method has no side effects. It doesn't modify any of the instance's member variables.)`
.. |vararg| replace:: :abbr:`vararg (This method accepts any number of arguments after the ones described here.)`
.. |constructor| replace:: :abbr:`constructor (This method is used to construct a type.)`
.. |static| replace:: :abbr:`static (This method doesn't need an instance to be called, so it can be called directly using the class name.)`
.. |operator| replace:: :abbr:`operator (This method describes a valid operator to use with this type as left-hand operand.)`
.. |bitfield| replace:: :abbr:`BitField (This value is an integer composed as a bitmask of the following flags.)`
.. |void| replace:: :abbr:`void (No return value.)`
