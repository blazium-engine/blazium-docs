:github_url: hide

.. DO NOT EDIT THIS FILE!!!
.. Generated automatically from Godot engine sources.
.. Generator: https://github.com/blazium-engine/blazium/tree/4.3/doc/tools/make_rst.py.
.. XML source: https://github.com/blazium-engine/blazium/tree/4.3/modules/sqlite/doc_classes/SQLiteQuery.xml.

.. _class_SQLiteQuery:

SQLiteQuery
===========

**Inherits:** :ref:`RefCounted<class_RefCounted>` **<** :ref:`Object<class_Object>`

Class for executing SQL queries on an SQLite database.

.. rst-class:: classref-introduction-group

Description
-----------

A class that allows you to execute SQL queries on an SQLite database. It provides methods for both single and batch execution of queries. It also provides a method to retrieve the column names from the last executed query and a method to get the last error message, if any.

.. rst-class:: classref-reftable-group

Properties
----------

.. table::
   :widths: auto

   +-----------------------------+--------------------------------------------------------+--------+
   | :ref:`Array<class_Array>`   | :ref:`arguments<class_SQLiteQuery_property_arguments>` | ``[]`` |
   +-----------------------------+--------------------------------------------------------+--------+
   | :ref:`String<class_String>` | :ref:`query<class_SQLiteQuery_property_query>`         | ``""`` |
   +-----------------------------+--------------------------------------------------------+--------+

.. rst-class:: classref-reftable-group

Methods
-------

.. table::
   :widths: auto

   +----------------------------------------------------------------------------------+-----------------------------------------------------------------------------------------------------------------------------------+
   | :ref:`Array<class_Array>`\[:ref:`SQLiteQueryResult<class_SQLiteQueryResult>`\]   | :ref:`batch_execute<class_SQLiteQuery_method_batch_execute>`\ (\ rows\: :ref:`Array<class_Array>`\[:ref:`Array<class_Array>`\]\ ) |
   +----------------------------------------------------------------------------------+-----------------------------------------------------------------------------------------------------------------------------------+
   | :ref:`SQLiteQueryResult<class_SQLiteQueryResult>`                                | :ref:`execute<class_SQLiteQuery_method_execute>`\ (\ arguments\: :ref:`Array<class_Array>` = []\ )                                |
   +----------------------------------------------------------------------------------+-----------------------------------------------------------------------------------------------------------------------------------+
   | :ref:`Array<class_Array>`\[:ref:`SQLiteColumnSchema<class_SQLiteColumnSchema>`\] | :ref:`get_columns<class_SQLiteQuery_method_get_columns>`\ (\ )                                                                    |
   +----------------------------------------------------------------------------------+-----------------------------------------------------------------------------------------------------------------------------------+
   | :ref:`String<class_String>`                                                      | :ref:`get_last_error_message<class_SQLiteQuery_method_get_last_error_message>`\ (\ ) |const|                                      |
   +----------------------------------------------------------------------------------+-----------------------------------------------------------------------------------------------------------------------------------+

.. rst-class:: classref-section-separator

----

.. rst-class:: classref-descriptions-group

Property Descriptions
---------------------

.. _class_SQLiteQuery_property_arguments:

.. rst-class:: classref-property

:ref:`Array<class_Array>` **arguments** = ``[]`` :ref:`ðŸ”—<class_SQLiteQuery_property_arguments>`

.. rst-class:: classref-property-setget

- |void| **set_arguments**\ (\ value\: :ref:`Array<class_Array>`\ )
- :ref:`Array<class_Array>` **get_arguments**\ (\ )

Arguments for the query.

.. rst-class:: classref-item-separator

----

.. _class_SQLiteQuery_property_query:

.. rst-class:: classref-property

:ref:`String<class_String>` **query** = ``""`` :ref:`ðŸ”—<class_SQLiteQuery_property_query>`

.. rst-class:: classref-property-setget

- :ref:`String<class_String>` **get_query**\ (\ )

The query executed.

.. rst-class:: classref-section-separator

----

.. rst-class:: classref-descriptions-group

Method Descriptions
-------------------

.. _class_SQLiteQuery_method_batch_execute:

.. rst-class:: classref-method

:ref:`Array<class_Array>`\[:ref:`SQLiteQueryResult<class_SQLiteQueryResult>`\] **batch_execute**\ (\ rows\: :ref:`Array<class_Array>`\[:ref:`Array<class_Array>`\]\ ) :ref:`ðŸ”—<class_SQLiteQuery_method_batch_execute>`

Executes a batch of SQL queries. The queries are provided as an array of strings. Returns the result of the last query in the batch.

.. rst-class:: classref-item-separator

----

.. _class_SQLiteQuery_method_execute:

.. rst-class:: classref-method

:ref:`SQLiteQueryResult<class_SQLiteQueryResult>` **execute**\ (\ arguments\: :ref:`Array<class_Array>` = []\ ) :ref:`ðŸ”—<class_SQLiteQuery_method_execute>`

Executes a single SQL query. The query is provided as a string. If the query requires arguments, they can be provided as an array. Returns the result of the query.

.. rst-class:: classref-item-separator

----

.. _class_SQLiteQuery_method_get_columns:

.. rst-class:: classref-method

:ref:`Array<class_Array>`\[:ref:`SQLiteColumnSchema<class_SQLiteColumnSchema>`\] **get_columns**\ (\ ) :ref:`ðŸ”—<class_SQLiteQuery_method_get_columns>`

Returns an array of column names from the last executed query.

.. rst-class:: classref-item-separator

----

.. _class_SQLiteQuery_method_get_last_error_message:

.. rst-class:: classref-method

:ref:`String<class_String>` **get_last_error_message**\ (\ ) |const| :ref:`ðŸ”—<class_SQLiteQuery_method_get_last_error_message>`

Returns the last error message, if any. If there was no error, returns an empty string.

.. |virtual| replace:: :abbr:`virtual (This method should typically be overridden by the user to have any effect.)`
.. |const| replace:: :abbr:`const (This method has no side effects. It doesn't modify any of the instance's member variables.)`
.. |vararg| replace:: :abbr:`vararg (This method accepts any number of arguments after the ones described here.)`
.. |constructor| replace:: :abbr:`constructor (This method is used to construct a type.)`
.. |static| replace:: :abbr:`static (This method doesn't need an instance to be called, so it can be called directly using the class name.)`
.. |operator| replace:: :abbr:`operator (This method describes a valid operator to use with this type as left-hand operand.)`
.. |bitfield| replace:: :abbr:`BitField (This value is an integer composed as a bitmask of the following flags.)`
.. |void| replace:: :abbr:`void (No return value.)`
