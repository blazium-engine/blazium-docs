:github_url: hide

.. DO NOT EDIT THIS FILE!!!
.. Generated automatically from Godot engine sources.
.. Generator: https://github.com/blazium-engine/blazium/tree/4.3/doc/tools/make_rst.py.
.. XML source: https://github.com/blazium-engine/blazium/tree/4.3/doc/classes/EditorScrollBox.xml.

.. _class_EditorScrollBox:

EditorScrollBox
===============

**Inherits:** :ref:`BoxContainer<class_BoxContainer>` **<** :ref:`Container<class_Container>` **<** :ref:`Control<class_Control>` **<** :ref:`CanvasItem<class_CanvasItem>` **<** :ref:`Node<class_Node>` **<** :ref:`Object<class_Object>`

**Inherited By:** :ref:`EditorHScrollBox<class_EditorHScrollBox>`, :ref:`EditorVScrollBox<class_EditorVScrollBox>`

Allow adding a control that can be scrolled horizontally or vertically with buttons.

.. rst-class:: classref-introduction-group

Description
-----------

A class used internally by the Editor to allow adding a control that can be scrolled with buttons.

.. rst-class:: classref-reftable-group

Methods
-------

.. table::
   :widths: auto

   +-----------------------------------------------+-----------------------------------------------------------------------------------------------------------------------------------+
   | |void|                                        | :ref:`ensure_control_visible<class_EditorScrollBox_method_ensure_control_visible>`\ (\ control\: :ref:`Control<class_Control>`\ ) |
   +-----------------------------------------------+-----------------------------------------------------------------------------------------------------------------------------------+
   | :ref:`Control<class_Control>`                 | :ref:`get_control<class_EditorScrollBox_method_get_control>`\ (\ ) |const|                                                        |
   +-----------------------------------------------+-----------------------------------------------------------------------------------------------------------------------------------+
   | :ref:`Button<class_Button>`                   | :ref:`get_first_button<class_EditorScrollBox_method_get_first_button>`\ (\ ) |const|                                              |
   +-----------------------------------------------+-----------------------------------------------------------------------------------------------------------------------------------+
   | :ref:`ScrollContainer<class_ScrollContainer>` | :ref:`get_scroll_container<class_EditorScrollBox_method_get_scroll_container>`\ (\ ) |const|                                      |
   +-----------------------------------------------+-----------------------------------------------------------------------------------------------------------------------------------+
   | :ref:`Button<class_Button>`                   | :ref:`get_second_button<class_EditorScrollBox_method_get_second_button>`\ (\ ) |const|                                            |
   +-----------------------------------------------+-----------------------------------------------------------------------------------------------------------------------------------+
   | :ref:`bool<class_bool>`                       | :ref:`has_control<class_EditorScrollBox_method_has_control>`\ (\ ) |const|                                                        |
   +-----------------------------------------------+-----------------------------------------------------------------------------------------------------------------------------------+
   | |void|                                        | :ref:`set_control<class_EditorScrollBox_method_set_control>`\ (\ control\: :ref:`Control<class_Control>`\ )                       |
   +-----------------------------------------------+-----------------------------------------------------------------------------------------------------------------------------------+

.. rst-class:: classref-reftable-group

Theme Properties
----------------

.. table::
   :widths: auto

   +-----------------------------------+------------------------------------------------------------------+
   | :ref:`Texture2D<class_Texture2D>` | :ref:`arrow_down<class_EditorScrollBox_theme_icon_arrow_down>`   |
   +-----------------------------------+------------------------------------------------------------------+
   | :ref:`Texture2D<class_Texture2D>` | :ref:`arrow_left<class_EditorScrollBox_theme_icon_arrow_left>`   |
   +-----------------------------------+------------------------------------------------------------------+
   | :ref:`Texture2D<class_Texture2D>` | :ref:`arrow_right<class_EditorScrollBox_theme_icon_arrow_right>` |
   +-----------------------------------+------------------------------------------------------------------+
   | :ref:`Texture2D<class_Texture2D>` | :ref:`arrow_up<class_EditorScrollBox_theme_icon_arrow_up>`       |
   +-----------------------------------+------------------------------------------------------------------+

.. rst-class:: classref-section-separator

----

.. rst-class:: classref-descriptions-group

Signals
-------

.. _class_EditorScrollBox_signal_vertical_changed:

.. rst-class:: classref-signal

**vertical_changed**\ (\ is_vertical\: :ref:`bool<class_bool>`\ ) :ref:`ðŸ”—<class_EditorScrollBox_signal_vertical_changed>`

Emitted when the alignment of the node is changed.

.. rst-class:: classref-section-separator

----

.. rst-class:: classref-descriptions-group

Method Descriptions
-------------------

.. _class_EditorScrollBox_method_ensure_control_visible:

.. rst-class:: classref-method

|void| **ensure_control_visible**\ (\ control\: :ref:`Control<class_Control>`\ ) :ref:`ðŸ”—<class_EditorScrollBox_method_ensure_control_visible>`

Ensures the given ``control`` is visible.

\ **Note:** This will not work on a node that was just added during the same frame. If you want to scroll to a newly added child, you must wait until the next frame using :ref:`SceneTree.process_frame<class_SceneTree_signal_process_frame>`:

.. rst-class:: classref-item-separator

----

.. _class_EditorScrollBox_method_get_control:

.. rst-class:: classref-method

:ref:`Control<class_Control>` **get_control**\ (\ ) |const| :ref:`ðŸ”—<class_EditorScrollBox_method_get_control>`

Returns the control node used by the :ref:`ScrollContainer<class_ScrollContainer>`.

.. rst-class:: classref-item-separator

----

.. _class_EditorScrollBox_method_get_first_button:

.. rst-class:: classref-method

:ref:`Button<class_Button>` **get_first_button**\ (\ ) |const| :ref:`ðŸ”—<class_EditorScrollBox_method_get_first_button>`

Returns the first button used to scroll to the begin.

.. rst-class:: classref-item-separator

----

.. _class_EditorScrollBox_method_get_scroll_container:

.. rst-class:: classref-method

:ref:`ScrollContainer<class_ScrollContainer>` **get_scroll_container**\ (\ ) |const| :ref:`ðŸ”—<class_EditorScrollBox_method_get_scroll_container>`

Returns the :ref:`ScrollContainer<class_ScrollContainer>` used by the buttons.

.. rst-class:: classref-item-separator

----

.. _class_EditorScrollBox_method_get_second_button:

.. rst-class:: classref-method

:ref:`Button<class_Button>` **get_second_button**\ (\ ) |const| :ref:`ðŸ”—<class_EditorScrollBox_method_get_second_button>`

Returns the second button used to scroll to the end.

.. rst-class:: classref-item-separator

----

.. _class_EditorScrollBox_method_has_control:

.. rst-class:: classref-method

:ref:`bool<class_bool>` **has_control**\ (\ ) |const| :ref:`ðŸ”—<class_EditorScrollBox_method_has_control>`

.. container:: contribute

	There is currently no description for this method. Please help us by :ref:`contributing one <doc_updating_the_class_reference>`!

.. rst-class:: classref-item-separator

----

.. _class_EditorScrollBox_method_set_control:

.. rst-class:: classref-method

|void| **set_control**\ (\ control\: :ref:`Control<class_Control>`\ ) :ref:`ðŸ”—<class_EditorScrollBox_method_set_control>`

Changes the control used by the :ref:`ScrollContainer<class_ScrollContainer>`.

if ``null``, removes the control used by the :ref:`ScrollContainer<class_ScrollContainer>`.

.. rst-class:: classref-section-separator

----

.. rst-class:: classref-descriptions-group

Theme Property Descriptions
---------------------------

.. _class_EditorScrollBox_theme_icon_arrow_down:

.. rst-class:: classref-themeproperty

:ref:`Texture2D<class_Texture2D>` **arrow_down** :ref:`ðŸ”—<class_EditorScrollBox_theme_icon_arrow_down>`

Arrow texture used when scrolling to the end in vertical layout.

.. rst-class:: classref-item-separator

----

.. _class_EditorScrollBox_theme_icon_arrow_left:

.. rst-class:: classref-themeproperty

:ref:`Texture2D<class_Texture2D>` **arrow_left** :ref:`ðŸ”—<class_EditorScrollBox_theme_icon_arrow_left>`

Arrow texture used when scrolling to the start in horizontal layout.

.. rst-class:: classref-item-separator

----

.. _class_EditorScrollBox_theme_icon_arrow_right:

.. rst-class:: classref-themeproperty

:ref:`Texture2D<class_Texture2D>` **arrow_right** :ref:`ðŸ”—<class_EditorScrollBox_theme_icon_arrow_right>`

Arrow texture used when scrolling to the end in horizontal layout.

.. rst-class:: classref-item-separator

----

.. _class_EditorScrollBox_theme_icon_arrow_up:

.. rst-class:: classref-themeproperty

:ref:`Texture2D<class_Texture2D>` **arrow_up** :ref:`ðŸ”—<class_EditorScrollBox_theme_icon_arrow_up>`

Arrow texture used when scrolling to the start in vertical layout.

.. |virtual| replace:: :abbr:`virtual (This method should typically be overridden by the user to have any effect.)`
.. |const| replace:: :abbr:`const (This method has no side effects. It doesn't modify any of the instance's member variables.)`
.. |vararg| replace:: :abbr:`vararg (This method accepts any number of arguments after the ones described here.)`
.. |constructor| replace:: :abbr:`constructor (This method is used to construct a type.)`
.. |static| replace:: :abbr:`static (This method doesn't need an instance to be called, so it can be called directly using the class name.)`
.. |operator| replace:: :abbr:`operator (This method describes a valid operator to use with this type as left-hand operand.)`
.. |bitfield| replace:: :abbr:`BitField (This value is an integer composed as a bitmask of the following flags.)`
.. |void| replace:: :abbr:`void (No return value.)`
