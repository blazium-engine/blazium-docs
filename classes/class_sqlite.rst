:github_url: hide

.. DO NOT EDIT THIS FILE!!!
.. Generated automatically from Godot engine sources.
.. Generator: https://github.com/blazium-engine/blazium/tree/4.3/doc/tools/make_rst.py.
.. XML source: https://github.com/blazium-engine/blazium/tree/4.3/modules/sqlite/doc_classes/SQLite.xml.

.. _class_SQLite:

SQLite
======

**Inherits:** :ref:`Node<class_Node>` **<** :ref:`Object<class_Object>`

Node containing a :ref:`SQLiteDatabase<class_SQLiteDatabase>` resource.

.. rst-class:: classref-introduction-group

Description
-----------

Node containing a :ref:`SQLiteDatabase<class_SQLiteDatabase>` resource.

.. rst-class:: classref-reftable-group

Properties
----------

.. table::
   :widths: auto

   +---------------------------------------------+-------------------------------------------------+
   | :ref:`SQLiteDatabase<class_SQLiteDatabase>` | :ref:`database<class_SQLite_property_database>` |
   +---------------------------------------------+-------------------------------------------------+

.. rst-class:: classref-section-separator

----

.. rst-class:: classref-descriptions-group

Property Descriptions
---------------------

.. _class_SQLite_property_database:

.. rst-class:: classref-property

:ref:`SQLiteDatabase<class_SQLiteDatabase>` **database** :ref:`ðŸ”—<class_SQLite_property_database>`

.. rst-class:: classref-property-setget

- |void| **set_database**\ (\ value\: :ref:`SQLiteDatabase<class_SQLiteDatabase>`\ )
- :ref:`SQLiteDatabase<class_SQLiteDatabase>` **get_database**\ (\ )

Database resource. Can either be in memory or loaded from disk.

.. |virtual| replace:: :abbr:`virtual (This method should typically be overridden by the user to have any effect.)`
.. |const| replace:: :abbr:`const (This method has no side effects. It doesn't modify any of the instance's member variables.)`
.. |vararg| replace:: :abbr:`vararg (This method accepts any number of arguments after the ones described here.)`
.. |constructor| replace:: :abbr:`constructor (This method is used to construct a type.)`
.. |static| replace:: :abbr:`static (This method doesn't need an instance to be called, so it can be called directly using the class name.)`
.. |operator| replace:: :abbr:`operator (This method describes a valid operator to use with this type as left-hand operand.)`
.. |bitfield| replace:: :abbr:`BitField (This value is an integer composed as a bitmask of the following flags.)`
.. |void| replace:: :abbr:`void (No return value.)`
