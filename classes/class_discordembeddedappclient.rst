:github_url: hide

.. DO NOT EDIT THIS FILE!!!
.. Generated automatically from Godot engine sources.
.. Generator: https://github.com/blazium-engine/blazium/tree/4.3/doc/tools/make_rst.py.
.. XML source: https://github.com/blazium-engine/blazium/tree/4.3/modules/blazium_sdk/doc_classes/DiscordEmbeddedAppClient.xml.

.. _class_DiscordEmbeddedAppClient:

DiscordEmbeddedAppClient
========================

**Inherits:** :ref:`ThirdPartyClient<class_ThirdPartyClient>` **<** :ref:`Node<class_Node>` **<** :ref:`Object<class_Object>`

Node for connecting to the Discord Embedded App service.

.. rst-class:: classref-introduction-group

Description
-----------

Implementation based on the official Discord Embedded App SDK for JS. Official documentation for this service on `discord.com/developers/docs/developer-tools/embedded-app-sdk <https://discord.com/developers/docs/developer-tools/embedded-app-sdk>`__.

.. rst-class:: classref-reftable-group

Properties
----------

.. table::
   :widths: auto

   +-----------------------------+---------------------------------------------------------------------------------------+-------------+
   | :ref:`String<class_String>` | :ref:`channel_id<class_DiscordEmbeddedAppClient_property_channel_id>`                 | ``""``      |
   +-----------------------------+---------------------------------------------------------------------------------------+-------------+
   | :ref:`String<class_String>` | :ref:`client_id<class_DiscordEmbeddedAppClient_property_client_id>`                   | ``""``      |
   +-----------------------------+---------------------------------------------------------------------------------------+-------------+
   | :ref:`String<class_String>` | :ref:`custom_id<class_DiscordEmbeddedAppClient_property_custom_id>`                   | ``""``      |
   +-----------------------------+---------------------------------------------------------------------------------------+-------------+
   | :ref:`String<class_String>` | :ref:`frame_id<class_DiscordEmbeddedAppClient_property_frame_id>`                     | ``""``      |
   +-----------------------------+---------------------------------------------------------------------------------------+-------------+
   | :ref:`String<class_String>` | :ref:`guild_id<class_DiscordEmbeddedAppClient_property_guild_id>`                     | ``""``      |
   +-----------------------------+---------------------------------------------------------------------------------------+-------------+
   | :ref:`String<class_String>` | :ref:`location_id<class_DiscordEmbeddedAppClient_property_location_id>`               | ``""``      |
   +-----------------------------+---------------------------------------------------------------------------------------+-------------+
   | :ref:`String<class_String>` | :ref:`mobile_app_version<class_DiscordEmbeddedAppClient_property_mobile_app_version>` | ``""``      |
   +-----------------------------+---------------------------------------------------------------------------------------+-------------+
   | :ref:`String<class_String>` | :ref:`platform<class_DiscordEmbeddedAppClient_property_platform>`                     | ``""``      |
   +-----------------------------+---------------------------------------------------------------------------------------+-------------+
   | :ref:`String<class_String>` | :ref:`referrer_id<class_DiscordEmbeddedAppClient_property_referrer_id>`               | ``""``      |
   +-----------------------------+---------------------------------------------------------------------------------------+-------------+
   | :ref:`String<class_String>` | :ref:`sdk_version<class_DiscordEmbeddedAppClient_property_sdk_version>`               | ``"1.9.0"`` |
   +-----------------------------+---------------------------------------------------------------------------------------+-------------+
   | :ref:`String<class_String>` | :ref:`user_id<class_DiscordEmbeddedAppClient_property_user_id>`                       | ``""``      |
   +-----------------------------+---------------------------------------------------------------------------------------+-------------+
   | :ref:`String<class_String>` | :ref:`user_instance_id<class_DiscordEmbeddedAppClient_property_user_instance_id>`     | ``""``      |
   +-----------------------------+---------------------------------------------------------------------------------------+-------------+

.. rst-class:: classref-reftable-group

Methods
-------

.. table::
   :widths: auto


   | :ref:`DiscordEmbeddedAppResponse<class_DiscordEmbeddedAppResponse>` | :ref:`authenticate<class_DiscordEmbeddedAppClient_method_authenticate>`\ (\ access_token\: :ref:`String<class_String>`\ )                                                                                                                                                                                                                                                                                                                                                                                                               |

   | :ref:`DiscordEmbeddedAppResponse<class_DiscordEmbeddedAppResponse>` | :ref:`authorize<class_DiscordEmbeddedAppClient_method_authorize>`\ (\ response_type\: :ref:`String<class_String>`, state\: :ref:`String<class_String>`, prompt\: :ref:`String<class_String>`, scope\: :ref:`Array<class_Array>`\ )                                                                                                                                                                                                                                                                                                      |

   | :ref:`DiscordEmbeddedAppResponse<class_DiscordEmbeddedAppResponse>` | :ref:`capture_log<class_DiscordEmbeddedAppClient_method_capture_log>`\ (\ level\: :ref:`String<class_String>`, message\: :ref:`String<class_String>`\ )                                                                                                                                                                                                                                                                                                                                                                                 |

   | |void|                                                              | :ref:`close<class_DiscordEmbeddedAppClient_method_close>`\ (\ code\: :ref:`int<class_int>`, message\: :ref:`String<class_String>`\ )                                                                                                                                                                                                                                                                                                                                                                                                    |

   | :ref:`DiscordEmbeddedAppResponse<class_DiscordEmbeddedAppResponse>` | :ref:`encourage_hardware_acceleration<class_DiscordEmbeddedAppClient_method_encourage_hardware_acceleration>`\ (\ )                                                                                                                                                                                                                                                                                                                                                                                                                     |

   | :ref:`DiscordEmbeddedAppResponse<class_DiscordEmbeddedAppResponse>` | :ref:`get_channel<class_DiscordEmbeddedAppClient_method_get_channel>`\ (\ channel_id\: :ref:`String<class_String>`\ )                                                                                                                                                                                                                                                                                                                                                                                                                   |
   +---------------------------------------------------------------------+-----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+
   | :ref:`DiscordEmbeddedAppResponse<class_DiscordEmbeddedAppResponse>` | :ref:`get_channel_permissions<class_DiscordEmbeddedAppClient_method_get_channel_permissions>`\ (\ )                                                                                                                                                                                                                                                                                                                                                                                                                                     |

   | :ref:`DiscordEmbeddedAppResponse<class_DiscordEmbeddedAppResponse>` | :ref:`get_entitlements<class_DiscordEmbeddedAppClient_method_get_entitlements>`\ (\ )                                                                                                                                                                                                                                                                                                                                                                                                                                                   |

   | :ref:`DiscordEmbeddedAppResponse<class_DiscordEmbeddedAppResponse>` | :ref:`get_instance_connected_participants<class_DiscordEmbeddedAppClient_method_get_instance_connected_participants>`\ (\ )                                                                                                                                                                                                                                                                                                                                                                                                             |

   | :ref:`DiscordEmbeddedAppResponse<class_DiscordEmbeddedAppResponse>` | :ref:`get_platform_behaviours<class_DiscordEmbeddedAppClient_method_get_platform_behaviours>`\ (\ )                                                                                                                                                                                                                                                                                                                                                                                                                                     |
   +---------------------------------------------------------------------+-----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+
   | :ref:`DiscordEmbeddedAppResponse<class_DiscordEmbeddedAppResponse>` | :ref:`get_skus<class_DiscordEmbeddedAppClient_method_get_skus>`\ (\ )                                                                                                                                                                                                                                                                                                                                                                                                                                                                   |

   | :ref:`DiscordEmbeddedAppResponse<class_DiscordEmbeddedAppResponse>` | :ref:`initiate_image_upload<class_DiscordEmbeddedAppClient_method_initiate_image_upload>`\ (\ )                                                                                                                                                                                                                                                                                                                                                                                                                                         |

   | :ref:`bool<class_bool>`                                             | :ref:`is_discord_environment<class_DiscordEmbeddedAppClient_method_is_discord_environment>`\ (\ )                                                                                                                                                                                                                                                                                                                                                                                                                                       |

   | :ref:`DiscordEmbeddedAppResponse<class_DiscordEmbeddedAppResponse>` | :ref:`is_ready<class_DiscordEmbeddedAppClient_method_is_ready>`\ (\ )                                                                                                                                                                                                                                                                                                                                                                                                                                                                   |

   | :ref:`DiscordEmbeddedAppResponse<class_DiscordEmbeddedAppResponse>` | :ref:`open_external_link<class_DiscordEmbeddedAppClient_method_open_external_link>`\ (\ url\: :ref:`String<class_String>`\ )                                                                                                                                                                                                                                                                                                                                                                                                            |

   | :ref:`DiscordEmbeddedAppResponse<class_DiscordEmbeddedAppResponse>` | :ref:`open_invite_dialog<class_DiscordEmbeddedAppClient_method_open_invite_dialog>`\ (\ )                                                                                                                                                                                                                                                                                                                                                                                                                                               |

   | :ref:`DiscordEmbeddedAppResponse<class_DiscordEmbeddedAppResponse>` | :ref:`open_share_moment_dialog<class_DiscordEmbeddedAppClient_method_open_share_moment_dialog>`\ (\ media_url\: :ref:`String<class_String>`\ )                                                                                                                                                                                                                                                                                                                                                                                          |

   | :ref:`DiscordEmbeddedAppResponse<class_DiscordEmbeddedAppResponse>` | :ref:`set_activity<class_DiscordEmbeddedAppClient_method_set_activity>`\ (\ activity\: :ref:`Dictionary<class_Dictionary>`\ )                                                                                                                                                                                                                                                                                                                                                                                                           |

   | :ref:`DiscordEmbeddedAppResponse<class_DiscordEmbeddedAppResponse>` | :ref:`set_config<class_DiscordEmbeddedAppClient_method_set_config>`\ (\ use_interactive_pip\: :ref:`bool<class_bool>`\ )                                                                                                                                                                                                                                                                                                                                                                                                                |

   | :ref:`DiscordEmbeddedAppResponse<class_DiscordEmbeddedAppResponse>` | :ref:`set_orientation_lock_state<class_DiscordEmbeddedAppClient_method_set_orientation_lock_state>`\ (\ lock_state\: :ref:`DiscordEmbeddedAppOrientationLockState<enum_DiscordEmbeddedAppClient_DiscordEmbeddedAppOrientationLockState>`, picture_in_picture_lock_state\: :ref:`DiscordEmbeddedAppOrientationLockState<enum_DiscordEmbeddedAppClient_DiscordEmbeddedAppOrientationLockState>`, grid_lock_state\: :ref:`DiscordEmbeddedAppOrientationLockState<enum_DiscordEmbeddedAppClient_DiscordEmbeddedAppOrientationLockState>`\ ) |

   | :ref:`DiscordEmbeddedAppResponse<class_DiscordEmbeddedAppResponse>` | :ref:`start_purchase<class_DiscordEmbeddedAppClient_method_start_purchase>`\ (\ sku_id\: :ref:`String<class_String>`, pid\: :ref:`String<class_String>`\ )                                                                                                                                                                                                                                                                                                                                                                              |

   | |void|                                                              | :ref:`subscribe_to_all_events<class_DiscordEmbeddedAppClient_method_subscribe_to_all_events>`\ (\ )                                                                                                                                                                                                                                                                                                                                                                                                                                     |
   +---------------------------------------------------------------------+-----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+
   | :ref:`DiscordEmbeddedAppResponse<class_DiscordEmbeddedAppResponse>` | :ref:`user_settings_get_locale<class_DiscordEmbeddedAppClient_method_user_settings_get_locale>`\ (\ )                                                                                                                                                                                                                                                                                                                                                                                                                                   |
   +---------------------------------------------------------------------+-----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+

.. rst-class:: classref-section-separator

----

.. rst-class:: classref-descriptions-group

Signals
-------

.. _class_DiscordEmbeddedAppClient_signal_activity_instance_participants_update:

.. rst-class:: classref-signal

**activity_instance_participants_update**\ (\ data\: :ref:`Dictionary<class_Dictionary>`\ ) :ref:`🔗<class_DiscordEmbeddedAppClient_signal_activity_instance_participants_update>`

Received when the number of instance participants changes.

.. rst-class:: classref-item-separator

----

.. _class_DiscordEmbeddedAppClient_signal_activity_layout_mode_update:

.. rst-class:: classref-signal

**activity_layout_mode_update**\ (\ data\: :ref:`Dictionary<class_Dictionary>`\ ) :ref:`🔗<class_DiscordEmbeddedAppClient_signal_activity_layout_mode_update>`

Received when a user changes the layout mode in the Discord client.

.. rst-class:: classref-item-separator

----

.. _class_DiscordEmbeddedAppClient_signal_current_guild_member_update:

.. rst-class:: classref-signal

**current_guild_member_update**\ (\ data\: :ref:`Dictionary<class_Dictionary>`\ ) :ref:`🔗<class_DiscordEmbeddedAppClient_signal_current_guild_member_update>`

Received when the current guild member object changes.

.. rst-class:: classref-item-separator

----

.. _class_DiscordEmbeddedAppClient_signal_current_user_update:

.. rst-class:: classref-signal

**current_user_update**\ (\ data\: :ref:`Dictionary<class_Dictionary>`\ ) :ref:`🔗<class_DiscordEmbeddedAppClient_signal_current_user_update>`

Received when the current user object changes.

.. rst-class:: classref-item-separator

----

.. _class_DiscordEmbeddedAppClient_signal_entitlement_create:

.. rst-class:: classref-signal

**entitlement_create**\ (\ data\: :ref:`Dictionary<class_Dictionary>`\ ) :ref:`🔗<class_DiscordEmbeddedAppClient_signal_entitlement_create>`

Received when an entitlement is created for a SKU.

.. rst-class:: classref-item-separator

----

.. _class_DiscordEmbeddedAppClient_signal_error:

.. rst-class:: classref-signal

**error**\ (\ data\: :ref:`Dictionary<class_Dictionary>`\ ) :ref:`🔗<class_DiscordEmbeddedAppClient_signal_error>`

Non-subscription event sent when there is an error, including command responses.

.. rst-class:: classref-item-separator

----

.. _class_DiscordEmbeddedAppClient_signal_log_updated:

.. rst-class:: classref-signal

**log_updated**\ (\ command\: :ref:`String<class_String>`, logs\: :ref:`String<class_String>`\ ) :ref:`🔗<class_DiscordEmbeddedAppClient_signal_log_updated>`

Received when logs are updated.

.. rst-class:: classref-item-separator

----

.. _class_DiscordEmbeddedAppClient_signal_orientation_update:

.. rst-class:: classref-signal

**orientation_update**\ (\ data\: :ref:`Dictionary<class_Dictionary>`\ ) :ref:`🔗<class_DiscordEmbeddedAppClient_signal_orientation_update>`

Received when screen orientation changes.

.. rst-class:: classref-item-separator

----

.. _class_DiscordEmbeddedAppClient_signal_speaking_start:

.. rst-class:: classref-signal

**speaking_start**\ (\ data\: :ref:`Dictionary<class_Dictionary>`\ ) :ref:`🔗<class_DiscordEmbeddedAppClient_signal_speaking_start>`

Sent when a user in a subscribed voice channel speaks.

.. rst-class:: classref-item-separator

----

.. _class_DiscordEmbeddedAppClient_signal_speaking_stop:

.. rst-class:: classref-signal

**speaking_stop**\ (\ data\: :ref:`Dictionary<class_Dictionary>`\ ) :ref:`🔗<class_DiscordEmbeddedAppClient_signal_speaking_stop>`

Sent when a user in a subscribed voice channel stops speaking.

.. rst-class:: classref-item-separator

----

.. _class_DiscordEmbeddedAppClient_signal_thermal_state_update:

.. rst-class:: classref-signal

**thermal_state_update**\ (\ data\: :ref:`Dictionary<class_Dictionary>`\ ) :ref:`🔗<class_DiscordEmbeddedAppClient_signal_thermal_state_update>`

Received when Android or iOS thermal states are surfaced to the Discord app.

.. rst-class:: classref-item-separator

----

.. _class_DiscordEmbeddedAppClient_signal_voice_state_update:

.. rst-class:: classref-signal

**voice_state_update**\ (\ data\: :ref:`Dictionary<class_Dictionary>`\ ) :ref:`🔗<class_DiscordEmbeddedAppClient_signal_voice_state_update>`

Sent when a user's voice state changes in a subscribed voice channel (mute, volume, etc.).

.. rst-class:: classref-section-separator

----

.. rst-class:: classref-descriptions-group

Enumerations
------------

.. _enum_DiscordEmbeddedAppClient_DiscordEmbeddedAppOrientationLockState:

.. rst-class:: classref-enumeration

enum **DiscordEmbeddedAppOrientationLockState**: :ref:`🔗<enum_DiscordEmbeddedAppClient_DiscordEmbeddedAppOrientationLockState>`

.. _class_DiscordEmbeddedAppClient_constant_DISCORD_EMBEDDED_APP_ORIENTATION_LOCK_STATE_UNHANDLED:

.. rst-class:: classref-enumeration-constant

:ref:`DiscordEmbeddedAppOrientationLockState<enum_DiscordEmbeddedAppClient_DiscordEmbeddedAppOrientationLockState>` **DISCORD_EMBEDDED_APP_ORIENTATION_LOCK_STATE_UNHANDLED** = ``-1``

Unhandled orientation lock state.

.. _class_DiscordEmbeddedAppClient_constant_DISCORD_EMBEDDED_APP_ORIENTATION_LOCK_STATE_UNLOCKED:

.. rst-class:: classref-enumeration-constant

:ref:`DiscordEmbeddedAppOrientationLockState<enum_DiscordEmbeddedAppClient_DiscordEmbeddedAppOrientationLockState>` **DISCORD_EMBEDDED_APP_ORIENTATION_LOCK_STATE_UNLOCKED** = ``1``

Unlocked orientation lock state.

.. _class_DiscordEmbeddedAppClient_constant_DISCORD_EMBEDDED_APP_ORIENTATION_LOCK_STATE_PORTRAIT:

.. rst-class:: classref-enumeration-constant

:ref:`DiscordEmbeddedAppOrientationLockState<enum_DiscordEmbeddedAppClient_DiscordEmbeddedAppOrientationLockState>` **DISCORD_EMBEDDED_APP_ORIENTATION_LOCK_STATE_PORTRAIT** = ``2``

Locked portrait orientation lock state.

.. _class_DiscordEmbeddedAppClient_constant_DISCORD_EMBEDDED_APP_ORIENTATION_LOCK_STATE_LANDSCAPE:

.. rst-class:: classref-enumeration-constant

:ref:`DiscordEmbeddedAppOrientationLockState<enum_DiscordEmbeddedAppClient_DiscordEmbeddedAppOrientationLockState>` **DISCORD_EMBEDDED_APP_ORIENTATION_LOCK_STATE_LANDSCAPE** = ``3``

Locked landscape orientation lock state.

.. rst-class:: classref-section-separator

----

.. rst-class:: classref-descriptions-group

Property Descriptions
---------------------

.. _class_DiscordEmbeddedAppClient_property_channel_id:

.. rst-class:: classref-property

:ref:`String<class_String>` **channel_id** = ``""`` :ref:`🔗<class_DiscordEmbeddedAppClient_property_channel_id>`

.. rst-class:: classref-property-setget

- :ref:`String<class_String>` **get_channel_id**\ (\ )

The id of a channel. A channel represents a guild or DM channel within Discord.

.. rst-class:: classref-item-separator

----

.. _class_DiscordEmbeddedAppClient_property_client_id:

.. rst-class:: classref-property

:ref:`String<class_String>` **client_id** = ``""`` :ref:`🔗<class_DiscordEmbeddedAppClient_property_client_id>`

.. rst-class:: classref-property-setget

- :ref:`String<class_String>` **get_client_id**\ (\ )

The client id you want to use when starting the client.

.. rst-class:: classref-item-separator

----

.. _class_DiscordEmbeddedAppClient_property_custom_id:

.. rst-class:: classref-property

:ref:`String<class_String>` **custom_id** = ``""`` :ref:`🔗<class_DiscordEmbeddedAppClient_property_custom_id>`

.. rst-class:: classref-property-setget

- :ref:`String<class_String>` **get_custom_id**\ (\ )

Custom ID.

.. rst-class:: classref-item-separator

----

.. _class_DiscordEmbeddedAppClient_property_frame_id:

.. rst-class:: classref-property

:ref:`String<class_String>` **frame_id** = ``""`` :ref:`🔗<class_DiscordEmbeddedAppClient_property_frame_id>`

.. rst-class:: classref-property-setget

- :ref:`String<class_String>` **get_frame_id**\ (\ )

Frame ID.

.. rst-class:: classref-item-separator

----

.. _class_DiscordEmbeddedAppClient_property_guild_id:

.. rst-class:: classref-property

:ref:`String<class_String>` **guild_id** = ``""`` :ref:`🔗<class_DiscordEmbeddedAppClient_property_guild_id>`

.. rst-class:: classref-property-setget

- :ref:`String<class_String>` **get_guild_id**\ (\ )

Guilds in Discord represent an isolated collection of users and channels, and are often referred to as "servers" in the UI.

.. rst-class:: classref-item-separator

----

.. _class_DiscordEmbeddedAppClient_property_location_id:

.. rst-class:: classref-property

:ref:`String<class_String>` **location_id** = ``""`` :ref:`🔗<class_DiscordEmbeddedAppClient_property_location_id>`

.. rst-class:: classref-property-setget

- :ref:`String<class_String>` **get_location_id**\ (\ )

Location ID.

.. rst-class:: classref-item-separator

----

.. _class_DiscordEmbeddedAppClient_property_mobile_app_version:

.. rst-class:: classref-property

:ref:`String<class_String>` **mobile_app_version** = ``""`` :ref:`🔗<class_DiscordEmbeddedAppClient_property_mobile_app_version>`

.. rst-class:: classref-property-setget

- :ref:`String<class_String>` **get_mobile_app_version**\ (\ )

Only if on mobile.

.. rst-class:: classref-item-separator

----

.. _class_DiscordEmbeddedAppClient_property_platform:

.. rst-class:: classref-property

:ref:`String<class_String>` **platform** = ``""`` :ref:`🔗<class_DiscordEmbeddedAppClient_property_platform>`

.. rst-class:: classref-property-setget

- :ref:`String<class_String>` **get_platform**\ (\ )

The platform, web, ios or android.

.. rst-class:: classref-item-separator

----

.. _class_DiscordEmbeddedAppClient_property_referrer_id:

.. rst-class:: classref-property

:ref:`String<class_String>` **referrer_id** = ``""`` :ref:`🔗<class_DiscordEmbeddedAppClient_property_referrer_id>`

.. rst-class:: classref-property-setget

- :ref:`String<class_String>` **get_referrer_id**\ (\ )

The id of the referrer.

.. rst-class:: classref-item-separator

----

.. _class_DiscordEmbeddedAppClient_property_sdk_version:

.. rst-class:: classref-property

:ref:`String<class_String>` **sdk_version** = ``"1.9.0"`` :ref:`🔗<class_DiscordEmbeddedAppClient_property_sdk_version>`

.. rst-class:: classref-property-setget

- :ref:`String<class_String>` **get_sdk_version**\ (\ )

The version of the Discord Embedded App used.

.. rst-class:: classref-item-separator

----

.. _class_DiscordEmbeddedAppClient_property_user_id:

.. rst-class:: classref-property

:ref:`String<class_String>` **user_id** = ``""`` :ref:`🔗<class_DiscordEmbeddedAppClient_property_user_id>`

.. rst-class:: classref-property-setget

- :ref:`String<class_String>` **get_user_id**\ (\ )

User ID.

.. rst-class:: classref-item-separator

----

.. _class_DiscordEmbeddedAppClient_property_user_instance_id:

.. rst-class:: classref-property

:ref:`String<class_String>` **user_instance_id** = ``""`` :ref:`🔗<class_DiscordEmbeddedAppClient_property_user_instance_id>`

.. rst-class:: classref-property-setget

- :ref:`String<class_String>` **get_user_instance_id**\ (\ )

Instance ID.

.. rst-class:: classref-section-separator

----

.. rst-class:: classref-descriptions-group

Method Descriptions
-------------------

.. _class_DiscordEmbeddedAppClient_method_authenticate:

.. rst-class:: classref-method

:ref:`DiscordEmbeddedAppResponse<class_DiscordEmbeddedAppResponse>` **authenticate**\ (\ access_token\: :ref:`String<class_String>`\ ) :ref:`🔗<class_DiscordEmbeddedAppClient_method_authenticate>`

Authenticate an existing client with your app. Wait for :ref:`is_ready()<class_DiscordEmbeddedAppClient_method_is_ready>` first.

Discord docs `discord.com/developers/docs/developer-tools/embedded-app-sdk#authenticate <https://discord.com/developers/docs/developer-tools/embedded-app-sdk#authenticate>`__\ 


.. tabs::

 .. code-tab:: gdscript

    var res :DiscordEmbeddedAppResult = await authenticate("ACCESS_TOKEN").finished
    if res.has_error():
        print(res.error)
    else:
        print(res.data)



Returns a :ref:`DiscordEmbeddedAppResponse<class_DiscordEmbeddedAppResponse>` object that has a :ref:`DiscordEmbeddedAppResponse.finished<class_DiscordEmbeddedAppResponse_signal_finished>` signal that is emitted when finished.

.. rst-class:: classref-item-separator

----

.. _class_DiscordEmbeddedAppClient_method_authorize:

.. rst-class:: classref-method

:ref:`DiscordEmbeddedAppResponse<class_DiscordEmbeddedAppResponse>` **authorize**\ (\ response_type\: :ref:`String<class_String>`, state\: :ref:`String<class_String>`, prompt\: :ref:`String<class_String>`, scope\: :ref:`Array<class_Array>`\ ) :ref:`🔗<class_DiscordEmbeddedAppClient_method_authorize>`

Authorize a new client with your app. Needs :ref:`client_id<class_DiscordEmbeddedAppClient_property_client_id>` to be set.

Discord docs `discord.com/developers/docs/developer-tools/embedded-app-sdk#authorize <https://discord.com/developers/docs/developer-tools/embedded-app-sdk#authorize>`__\ 


.. tabs::

 .. code-tab:: gdscript

    var res :DiscordEmbeddedAppResult = await authorize("code", "", "none", ["identity", "guilds"]).finished
    if res.has_error():
        print(res.error)
    else:
        print(res.data)



Returns a :ref:`DiscordEmbeddedAppResponse<class_DiscordEmbeddedAppResponse>` object that has a :ref:`DiscordEmbeddedAppResponse.finished<class_DiscordEmbeddedAppResponse_signal_finished>` signal that is emitted when finished.

.. rst-class:: classref-item-separator

----

.. _class_DiscordEmbeddedAppClient_method_capture_log:

.. rst-class:: classref-method

:ref:`DiscordEmbeddedAppResponse<class_DiscordEmbeddedAppResponse>` **capture_log**\ (\ level\: :ref:`String<class_String>`, message\: :ref:`String<class_String>`\ ) :ref:`🔗<class_DiscordEmbeddedAppClient_method_capture_log>`

Forward logs to your own logger. Wait for :ref:`is_ready()<class_DiscordEmbeddedAppClient_method_is_ready>` first.

Discord docs `discord.com/developers/docs/developer-tools/embedded-app-sdk#capturelog <Discord docs [url=https://discord.com/developers/docs/developer-tools/embedded-app-sdk#capturelog>`__\ 


.. tabs::

 .. code-tab:: gdscript

    var res :DiscordEmbeddedAppResult = await capture_log("log", "This is my log message!").finished
    if res.has_error():
        print(res.error)
    else:
        print(res.data)



Returns a :ref:`DiscordEmbeddedAppResponse<class_DiscordEmbeddedAppResponse>` object that has a :ref:`DiscordEmbeddedAppResponse.finished<class_DiscordEmbeddedAppResponse_signal_finished>` signal that is emitted when finished.

.. rst-class:: classref-item-separator

----

.. _class_DiscordEmbeddedAppClient_method_close:

.. rst-class:: classref-method

|void| **close**\ (\ code\: :ref:`int<class_int>`, message\: :ref:`String<class_String>`\ ) :ref:`🔗<class_DiscordEmbeddedAppClient_method_close>`

Close an Embedded App. Wait for :ref:`is_ready()<class_DiscordEmbeddedAppClient_method_is_ready>` first.

Discord docs `discord.com/developers/docs/developer-tools/embedded-app-sdk#close <Discord docs [url=https://discord.com/developers/docs/developer-tools/embedded-app-sdk#close>`__\ 


.. tabs::

 .. code-tab:: gdscript

    var res :DiscordEmbeddedAppResult = await close(1000, "You exited app.").finished
    if res.has_error():
        print(res.error)
    else:
        print(res.data)



.. rst-class:: classref-item-separator

----

.. _class_DiscordEmbeddedAppClient_method_encourage_hardware_acceleration:

.. rst-class:: classref-method

:ref:`DiscordEmbeddedAppResponse<class_DiscordEmbeddedAppResponse>` **encourage_hardware_acceleration**\ (\ ) :ref:`🔗<class_DiscordEmbeddedAppClient_method_encourage_hardware_acceleration>`

Presents a modal dialog to allow enabling of hardware acceleration. Wait for :ref:`is_ready()<class_DiscordEmbeddedAppClient_method_is_ready>` first.

Discord docs `discord.com/developers/docs/developer-tools/embedded-app-sdk#encouragehardwareacceleration <Discord docs [url=https://discord.com/developers/docs/developer-tools/embedded-app-sdk#encouragehardwareacceleration>`__\ 


.. tabs::

 .. code-tab:: gdscript

    var res :DiscordEmbeddedAppResult = await encourage_hardware_acceleration().finished
    if res.has_error():
        print(res.error)
    else:
        print(res.data)



Returns a :ref:`DiscordEmbeddedAppResponse<class_DiscordEmbeddedAppResponse>` object that has a :ref:`DiscordEmbeddedAppResponse.finished<class_DiscordEmbeddedAppResponse_signal_finished>` signal that is emitted when finished.

.. rst-class:: classref-item-separator

----

.. _class_DiscordEmbeddedAppClient_method_get_channel:

.. rst-class:: classref-method

:ref:`DiscordEmbeddedAppResponse<class_DiscordEmbeddedAppResponse>` **get_channel**\ (\ channel_id\: :ref:`String<class_String>`\ ) :ref:`🔗<class_DiscordEmbeddedAppClient_method_get_channel>`

Returns information about the channel, per the channel_id. Wait for :ref:`is_ready()<class_DiscordEmbeddedAppClient_method_is_ready>` first.

Discord docs `discord.com/developers/docs/developer-tools/embedded-app-sdk#getchannel <Discord docs [url=https://discord.com/developers/docs/developer-tools/embedded-app-sdk#getchannel>`__\ 


.. tabs::

 .. code-tab:: gdscript

    var res :DiscordEmbeddedAppResult = await get_channel("channel_id").finished
    if res.has_error():
        print(res.error)
    else:
        print(res.data)



Returns a :ref:`DiscordEmbeddedAppResponse<class_DiscordEmbeddedAppResponse>` object that has a :ref:`DiscordEmbeddedAppResponse.finished<class_DiscordEmbeddedAppResponse_signal_finished>` signal that is emitted when finished.

.. rst-class:: classref-item-separator

----

.. _class_DiscordEmbeddedAppClient_method_get_channel_permissions:

.. rst-class:: classref-method

:ref:`DiscordEmbeddedAppResponse<class_DiscordEmbeddedAppResponse>` **get_channel_permissions**\ (\ ) :ref:`🔗<class_DiscordEmbeddedAppClient_method_get_channel_permissions>`

Returns permissions for the current user in the currently connected channel. Wait for :ref:`is_ready()<class_DiscordEmbeddedAppClient_method_is_ready>` first.

Discord docs `discord.com/developers/docs/developer-tools/embedded-app-sdk#getchannelpermissions <Discord docs [url=https://discord.com/developers/docs/developer-tools/embedded-app-sdk#getchannelpermissions>`__\ 


.. tabs::

 .. code-tab:: gdscript

    var res :DiscordEmbeddedAppResult = await get_channel_permissions().finished
    if res.has_error():
        print(res.error)
    else:
        print(res.data)



Returns a :ref:`DiscordEmbeddedAppResponse<class_DiscordEmbeddedAppResponse>` object that has a :ref:`DiscordEmbeddedAppResponse.finished<class_DiscordEmbeddedAppResponse_signal_finished>` signal that is emitted when finished.

.. rst-class:: classref-item-separator

----

.. _class_DiscordEmbeddedAppClient_method_get_entitlements:

.. rst-class:: classref-method

:ref:`DiscordEmbeddedAppResponse<class_DiscordEmbeddedAppResponse>` **get_entitlements**\ (\ ) :ref:`🔗<class_DiscordEmbeddedAppClient_method_get_entitlements>`

Returns a list of entitlements for the current user. Wait for :ref:`is_ready()<class_DiscordEmbeddedAppClient_method_is_ready>` first.

Discord docs `discord.com/developers/docs/developer-tools/embedded-app-sdk#getentitlements <Discord docs [url=https://discord.com/developers/docs/developer-tools/embedded-app-sdk#getentitlements>`__\ 


.. tabs::

 .. code-tab:: gdscript

    var res :DiscordEmbeddedAppResult = await get_entitlements().finished
    if res.has_error():
        print(res.error)
    else:
        print(res.data)



Returns a :ref:`DiscordEmbeddedAppResponse<class_DiscordEmbeddedAppResponse>` object that has a :ref:`DiscordEmbeddedAppResponse.finished<class_DiscordEmbeddedAppResponse_signal_finished>` signal that is emitted when finished.

.. rst-class:: classref-item-separator

----

.. _class_DiscordEmbeddedAppClient_method_get_instance_connected_participants:

.. rst-class:: classref-method

:ref:`DiscordEmbeddedAppResponse<class_DiscordEmbeddedAppResponse>` **get_instance_connected_participants**\ (\ ) :ref:`🔗<class_DiscordEmbeddedAppClient_method_get_instance_connected_participants>`

Returns all participants connected to the instance. Wait for :ref:`is_ready()<class_DiscordEmbeddedAppClient_method_is_ready>` first.

Discord docs `discord.com/developers/docs/developer-tools/embedded-app-sdk#getinstanceconnectedparticipants <Discord docs [url=https://discord.com/developers/docs/developer-tools/embedded-app-sdk#getinstanceconnectedparticipants>`__\ 


.. tabs::

 .. code-tab:: gdscript

    var res :DiscordEmbeddedAppResult = await get_instance_connected_participants().finished
    if res.has_error():
        print(res.error)
    else:
        print(res.data)



Returns a :ref:`DiscordEmbeddedAppResponse<class_DiscordEmbeddedAppResponse>` object that has a :ref:`DiscordEmbeddedAppResponse.finished<class_DiscordEmbeddedAppResponse_signal_finished>` signal that is emitted when finished.

.. rst-class:: classref-item-separator

----

.. _class_DiscordEmbeddedAppClient_method_get_platform_behaviours:

.. rst-class:: classref-method

:ref:`DiscordEmbeddedAppResponse<class_DiscordEmbeddedAppResponse>` **get_platform_behaviours**\ (\ ) :ref:`🔗<class_DiscordEmbeddedAppClient_method_get_platform_behaviours>`

Returns information about supported platform behaviors. Wait for :ref:`is_ready()<class_DiscordEmbeddedAppClient_method_is_ready>` first.

Discord docs `discord.com/developers/docs/developer-tools/embedded-app-sdk#getplatformbehaviors <Discord docs [url=https://discord.com/developers/docs/developer-tools/embedded-app-sdk#getplatformbehaviors>`__\ 


.. tabs::

 .. code-tab:: gdscript

    var res :DiscordEmbeddedAppResult = await get_platform_behaviours().finished
    if res.has_error():
        print(res.error)
    else:
        print(res.data)



Returns a :ref:`DiscordEmbeddedAppResponse<class_DiscordEmbeddedAppResponse>` object that has a :ref:`DiscordEmbeddedAppResponse.finished<class_DiscordEmbeddedAppResponse_signal_finished>` signal that is emitted when finished.

.. rst-class:: classref-item-separator

----

.. _class_DiscordEmbeddedAppClient_method_get_skus:

.. rst-class:: classref-method

:ref:`DiscordEmbeddedAppResponse<class_DiscordEmbeddedAppResponse>` **get_skus**\ (\ ) :ref:`🔗<class_DiscordEmbeddedAppClient_method_get_skus>`

Returns a list of your app's SKUs. Wait for :ref:`is_ready()<class_DiscordEmbeddedAppClient_method_is_ready>` first.

Discord docs `discord.com/developers/docs/developer-tools/embedded-app-sdk#getskus <Discord docs [url=https://discord.com/developers/docs/developer-tools/embedded-app-sdk#getskus>`__\ 


.. tabs::

 .. code-tab:: gdscript

    var res :DiscordEmbeddedAppResult = await get_skus().finished
    if res.has_error():
        print(res.error)
    else:
        print(res.data)



Returns a :ref:`DiscordEmbeddedAppResponse<class_DiscordEmbeddedAppResponse>` object that has a :ref:`DiscordEmbeddedAppResponse.finished<class_DiscordEmbeddedAppResponse_signal_finished>` signal that is emitted when finished.

.. rst-class:: classref-item-separator

----

.. _class_DiscordEmbeddedAppClient_method_initiate_image_upload:

.. rst-class:: classref-method

:ref:`DiscordEmbeddedAppResponse<class_DiscordEmbeddedAppResponse>` **initiate_image_upload**\ (\ ) :ref:`🔗<class_DiscordEmbeddedAppClient_method_initiate_image_upload>`

Presents the file upload flow in the Discord client. Wait for :ref:`is_ready()<class_DiscordEmbeddedAppClient_method_is_ready>` first.

Discord docs `discord.com/developers/docs/developer-tools/embedded-app-sdk#initiateimageupload <Discord docs [url=https://discord.com/developers/docs/developer-tools/embedded-app-sdk#initiateimageupload>`__\ 


.. tabs::

 .. code-tab:: gdscript

    var res :DiscordEmbeddedAppResult = await initiate_image_upload().finished
    if res.has_error():
        print(res.error)
    else:
        print(res.data)



Returns a :ref:`DiscordEmbeddedAppResponse<class_DiscordEmbeddedAppResponse>` object that has a :ref:`DiscordEmbeddedAppResponse.finished<class_DiscordEmbeddedAppResponse_signal_finished>` signal that is emitted when finished.

.. rst-class:: classref-item-separator

----

.. _class_DiscordEmbeddedAppClient_method_is_discord_environment:

.. rst-class:: classref-method

:ref:`bool<class_bool>` **is_discord_environment**\ (\ ) :ref:`🔗<class_DiscordEmbeddedAppClient_method_is_discord_environment>`

Returns whether or not the current environment is Discord environment.


.. tabs::

 .. code-tab:: gdscript

    if is_discord_environment():
        print("This is discord environment")



.. rst-class:: classref-item-separator

----

.. _class_DiscordEmbeddedAppClient_method_is_ready:

.. rst-class:: classref-method

:ref:`DiscordEmbeddedAppResponse<class_DiscordEmbeddedAppResponse>` **is_ready**\ (\ ) :ref:`🔗<class_DiscordEmbeddedAppClient_method_is_ready>`

Returns whether or not the client is ready.

Discord docs `discord.com/developers/docs/developer-tools/embedded-app-sdk#ready <https://discord.com/developers/docs/developer-tools/embedded-app-sdk#ready>`__\ 


.. tabs::

 .. code-tab:: gdscript

    var res :DiscordEmbeddedAppResult = await is_ready().finished
    if res.has_error():
        print(res.error)
    else:
        print(res.data)



Returns a :ref:`DiscordEmbeddedAppResponse<class_DiscordEmbeddedAppResponse>` object that has a :ref:`DiscordEmbeddedAppResponse.finished<class_DiscordEmbeddedAppResponse_signal_finished>` signal that is emitted when finished.

.. rst-class:: classref-item-separator

----

.. _class_DiscordEmbeddedAppClient_method_open_external_link:

.. rst-class:: classref-method

:ref:`DiscordEmbeddedAppResponse<class_DiscordEmbeddedAppResponse>` **open_external_link**\ (\ url\: :ref:`String<class_String>`\ ) :ref:`🔗<class_DiscordEmbeddedAppClient_method_open_external_link>`

Allows for opening an external link from within the Discord client. Wait for :ref:`is_ready()<class_DiscordEmbeddedAppClient_method_is_ready>` first.

Discord docs `discord.com/developers/docs/developer-tools/embedded-app-sdk#openexternallink <Discord docs [url=https://discord.com/developers/docs/developer-tools/embedded-app-sdk#openexternallink>`__\ 


.. tabs::

 .. code-tab:: gdscript

    var res :DiscordEmbeddedAppResult = await open_external_link("url").finished
    if res.has_error():
        print(res.error)
    else:
        print(res.data)



Returns a :ref:`DiscordEmbeddedAppResponse<class_DiscordEmbeddedAppResponse>` object that has a :ref:`DiscordEmbeddedAppResponse.finished<class_DiscordEmbeddedAppResponse_signal_finished>` signal that is emitted when finished.

.. rst-class:: classref-item-separator

----

.. _class_DiscordEmbeddedAppClient_method_open_invite_dialog:

.. rst-class:: classref-method

:ref:`DiscordEmbeddedAppResponse<class_DiscordEmbeddedAppResponse>` **open_invite_dialog**\ (\ ) :ref:`🔗<class_DiscordEmbeddedAppClient_method_open_invite_dialog>`

Presents a modal dialog with Channel Invite UI without requiring additional OAuth scopes. Wait for :ref:`is_ready()<class_DiscordEmbeddedAppClient_method_is_ready>` first.

Discord docs `discord.com/developers/docs/developer-tools/embedded-app-sdk#openinvitedialog <Discord docs [url=https://discord.com/developers/docs/developer-tools/embedded-app-sdk#openinvitedialog>`__\ 


.. tabs::

 .. code-tab:: gdscript

    var res :DiscordEmbeddedAppResult = await open_invite_dialog().finished
    if res.has_error():
        print(res.error)
    else:
        print(res.data)



Returns a :ref:`DiscordEmbeddedAppResponse<class_DiscordEmbeddedAppResponse>` object that has a :ref:`DiscordEmbeddedAppResponse.finished<class_DiscordEmbeddedAppResponse_signal_finished>` signal that is emitted when finished.

.. rst-class:: classref-item-separator

----

.. _class_DiscordEmbeddedAppClient_method_open_share_moment_dialog:

.. rst-class:: classref-method

:ref:`DiscordEmbeddedAppResponse<class_DiscordEmbeddedAppResponse>` **open_share_moment_dialog**\ (\ media_url\: :ref:`String<class_String>`\ ) :ref:`🔗<class_DiscordEmbeddedAppClient_method_open_share_moment_dialog>`

Presents a modal dialog to share media to a channel or DM. Wait for :ref:`is_ready()<class_DiscordEmbeddedAppClient_method_is_ready>` first.

Discord docs `discord.com/developers/docs/developer-tools/embedded-app-sdk#opensharemomentdialog <Discord docs [url=https://discord.com/developers/docs/developer-tools/embedded-app-sdk#opensharemomentdialog>`__\ 


.. tabs::

 .. code-tab:: gdscript

    var res :DiscordEmbeddedAppResult = await open_share_moment_dialog().finished
    if res.has_error():
        print(res.error)
    else:
        print(res.data)



Returns a :ref:`DiscordEmbeddedAppResponse<class_DiscordEmbeddedAppResponse>` object that has a :ref:`DiscordEmbeddedAppResponse.finished<class_DiscordEmbeddedAppResponse_signal_finished>` signal that is emitted when finished.

.. rst-class:: classref-item-separator

----

.. _class_DiscordEmbeddedAppClient_method_set_activity:

.. rst-class:: classref-method

:ref:`DiscordEmbeddedAppResponse<class_DiscordEmbeddedAppResponse>` **set_activity**\ (\ activity\: :ref:`Dictionary<class_Dictionary>`\ ) :ref:`🔗<class_DiscordEmbeddedAppClient_method_set_activity>`

Modifies how your activity's rich presence is displayed in the Discord client. Wait for :ref:`is_ready()<class_DiscordEmbeddedAppClient_method_is_ready>` first.

Discord docs `discord.com/developers/docs/developer-tools/embedded-app-sdk#setactivity <Discord docs [url=https://discord.com/developers/docs/developer-tools/embedded-app-sdk#setactivity>`__\ 


.. tabs::

 .. code-tab:: gdscript

    var res :DiscordEmbeddedAppResult = await set_activity({"type": 0, "details": "Details", "state": "Playing"}).finished
    if res.has_error():
        print(res.error)
    else:
        print(res.data)



Returns a :ref:`DiscordEmbeddedAppResponse<class_DiscordEmbeddedAppResponse>` object that has a :ref:`DiscordEmbeddedAppResponse.finished<class_DiscordEmbeddedAppResponse_signal_finished>` signal that is emitted when finished.

.. rst-class:: classref-item-separator

----

.. _class_DiscordEmbeddedAppClient_method_set_config:

.. rst-class:: classref-method

:ref:`DiscordEmbeddedAppResponse<class_DiscordEmbeddedAppResponse>` **set_config**\ (\ use_interactive_pip\: :ref:`bool<class_bool>`\ ) :ref:`🔗<class_DiscordEmbeddedAppClient_method_set_config>`

Set whether or not the PIP (picture-in-picture) is interactive. Wait for :ref:`is_ready()<class_DiscordEmbeddedAppClient_method_is_ready>` first.

Discord docs `discord.com/developers/docs/developer-tools/embedded-app-sdk#setconfig <Discord docs [url=https://discord.com/developers/docs/developer-tools/embedded-app-sdk#setconfig>`__\ 


.. tabs::

 .. code-tab:: gdscript

    var res :DiscordEmbeddedAppResult = await set_config(true).finished
    if res.has_error():
        print(res.error)
    else:
        print(res.data)



Returns a :ref:`DiscordEmbeddedAppResponse<class_DiscordEmbeddedAppResponse>` object that has a :ref:`DiscordEmbeddedAppResponse.finished<class_DiscordEmbeddedAppResponse_signal_finished>` signal that is emitted when finished.

.. rst-class:: classref-item-separator

----

.. _class_DiscordEmbeddedAppClient_method_set_orientation_lock_state:

.. rst-class:: classref-method

:ref:`DiscordEmbeddedAppResponse<class_DiscordEmbeddedAppResponse>` **set_orientation_lock_state**\ (\ lock_state\: :ref:`DiscordEmbeddedAppOrientationLockState<enum_DiscordEmbeddedAppClient_DiscordEmbeddedAppOrientationLockState>`, picture_in_picture_lock_state\: :ref:`DiscordEmbeddedAppOrientationLockState<enum_DiscordEmbeddedAppClient_DiscordEmbeddedAppOrientationLockState>`, grid_lock_state\: :ref:`DiscordEmbeddedAppOrientationLockState<enum_DiscordEmbeddedAppClient_DiscordEmbeddedAppOrientationLockState>`\ ) :ref:`🔗<class_DiscordEmbeddedAppClient_method_set_orientation_lock_state>`

Set options for orientation and picture-in-picture (PIP) modes. Wait for :ref:`is_ready()<class_DiscordEmbeddedAppClient_method_is_ready>` first.

Discord docs `discord.com/developers/docs/developer-tools/embedded-app-sdk#setorientationlockstate <Discord docs [url=https://discord.com/developers/docs/developer-tools/embedded-app-sdk#setorientationlockstate>`__\ 


.. tabs::

 .. code-tab:: gdscript

    var res :DiscordEmbeddedAppResult = await set_orientation_lock_state(DiscordEmbeddedAppClient.DISCORD_EMBEDDED_APP_ORIENTATION_LOCK_STATE_UNLOCKED, DiscordEmbeddedAppClient.DISCORD_EMBEDDED_APP_ORIENTATION_LOCK_STATE_UNLOCKED, DiscordEmbeddedAppClient.DISCORD_EMBEDDED_APP_ORIENTATION_LOCK_STATE_UNLOCKED).finished
    if res.has_error():
        print(res.error)
    else:
        print(res.data)



Returns a :ref:`DiscordEmbeddedAppResponse<class_DiscordEmbeddedAppResponse>` object that has a :ref:`DiscordEmbeddedAppResponse.finished<class_DiscordEmbeddedAppResponse_signal_finished>` signal that is emitted when finished.

.. rst-class:: classref-item-separator

----

.. _class_DiscordEmbeddedAppClient_method_start_purchase:

.. rst-class:: classref-method

:ref:`DiscordEmbeddedAppResponse<class_DiscordEmbeddedAppResponse>` **start_purchase**\ (\ sku_id\: :ref:`String<class_String>`, pid\: :ref:`String<class_String>`\ ) :ref:`🔗<class_DiscordEmbeddedAppClient_method_start_purchase>`

Launches the purchase flow for a specific SKU, per the sku_id. Wait for :ref:`is_ready()<class_DiscordEmbeddedAppClient_method_is_ready>` first.

Discord docs `discord.com/developers/docs/developer-tools/embedded-app-sdk#startpurchase <Discord docs [url=https://discord.com/developers/docs/developer-tools/embedded-app-sdk#startpurchase>`__\ 


.. tabs::

 .. code-tab:: gdscript

    var res :DiscordEmbeddedAppResult = await start_purchase("sku_id", "pid").finished
    if res.has_error():
        print(res.error)
    else:
        print(res.data)



Returns a :ref:`DiscordEmbeddedAppResponse<class_DiscordEmbeddedAppResponse>` object that has a :ref:`DiscordEmbeddedAppResponse.finished<class_DiscordEmbeddedAppResponse_signal_finished>` signal that is emitted when finished.

.. rst-class:: classref-item-separator

----

.. _class_DiscordEmbeddedAppClient_method_subscribe_to_all_events:

.. rst-class:: classref-method

|void| **subscribe_to_all_events**\ (\ ) :ref:`🔗<class_DiscordEmbeddedAppClient_method_subscribe_to_all_events>`

Subscribes to all events. Needs to be done after :ref:`authenticate()<class_DiscordEmbeddedAppClient_method_authenticate>`. Wait for :ref:`is_ready()<class_DiscordEmbeddedAppClient_method_is_ready>` first.


.. tabs::

 .. code-tab:: gdscript

    subscribe_to_all_events()



.. rst-class:: classref-item-separator

----

.. _class_DiscordEmbeddedAppClient_method_user_settings_get_locale:

.. rst-class:: classref-method

:ref:`DiscordEmbeddedAppResponse<class_DiscordEmbeddedAppResponse>` **user_settings_get_locale**\ (\ ) :ref:`🔗<class_DiscordEmbeddedAppClient_method_user_settings_get_locale>`

Returns the current user's locale. Wait for :ref:`is_ready()<class_DiscordEmbeddedAppClient_method_is_ready>` first.

Discord docs `discord.com/developers/docs/developer-tools/embedded-app-sdk#usersettingsgetlocale <Discord docs [url=https://discord.com/developers/docs/developer-tools/embedded-app-sdk#usersettingsgetlocale>`__\ 


.. tabs::

 .. code-tab:: gdscript

    var res :DiscordEmbeddedAppResult = await user_settings_get_locale().finished
    if res.has_error():
        print(res.error)
    else:
        print(res.data)



Returns a :ref:`DiscordEmbeddedAppResponse<class_DiscordEmbeddedAppResponse>` object that has a :ref:`DiscordEmbeddedAppResponse.finished<class_DiscordEmbeddedAppResponse_signal_finished>` signal that is emitted when finished.

.. |virtual| replace:: :abbr:`virtual (This method should typically be overridden by the user to have any effect.)`
.. |const| replace:: :abbr:`const (This method has no side effects. It doesn't modify any of the instance's member variables.)`
.. |vararg| replace:: :abbr:`vararg (This method accepts any number of arguments after the ones described here.)`
.. |constructor| replace:: :abbr:`constructor (This method is used to construct a type.)`
.. |static| replace:: :abbr:`static (This method doesn't need an instance to be called, so it can be called directly using the class name.)`
.. |operator| replace:: :abbr:`operator (This method describes a valid operator to use with this type as left-hand operand.)`
.. |bitfield| replace:: :abbr:`BitField (This value is an integer composed as a bitmask of the following flags.)`
.. |void| replace:: :abbr:`void (No return value.)`
